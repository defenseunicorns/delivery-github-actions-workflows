name: secure-test-with-chatops

on:
  workflow_call:
    secrets:
      TOKEN:
        description: "GitHub App Token"
        required: false
      APPLICATION_ID:
        description: "The GitHub App ID"
        required: false
      APPLICATION_PRIVATE_KEY:
        description: "The GitHub App Private Key"
        required: false
      AWS_GOVCLOUD_ROLE_TO_ASSUME:
        description: "AWS Govcloud IAM Role to assume"
        required: true
      SLACK_WEBHOOK_URL:
        description: "Slack webhook URL to post failures to"
        required: true

jobs:

  get-buildharness-software-versions:
    runs-on: ubuntu-latest
    if: ${{ ! (github.event_name == 'repository_dispatch' && contains(github.event.client_payload.slash_command.args.unnamed.all, 'ping')) }}
    outputs:
      buildharness_version: ${{ steps.buildharness_software_versions.outputs.buildharness_version }}
      golang_version: ${{ steps.buildharness_software_versions.outputs.golang_version }}
      terraform_version: ${{ steps.buildharness_software_versions.outputs.terraform_version }}
      zarf_version: ${{ steps.buildharness_software_versions.outputs.zarf_version }}
    steps:
      - name: Get buildharness software versions
        id: buildharness_software_versions
        uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/get-buildharness-software-versions@main
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          token: ${{ secrets.TOKEN }}

  # Run secure e2e tests in govcloud
  e2e-govcloud-secure:
    runs-on: ubuntu-latest
    needs: get-buildharness-software-versions
    steps:
    - name: Run E2E govcloud secure tests
      uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/e2e@main
      with:
        application_id: ${{ secrets.APPLICATION_ID }}
        application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
        token: ${{ secrets.TOKEN }}
        buildharness_version: ${{ needs.get-buildharness-software-versions.outputs.buildharness_version }}
        golang_version: ${{ needs.get-buildharness-software-versions.outputs.golang_version }}
        terraform_version: ${{ needs.get-buildharness-software-versions.outputs.terraform_version }}
        zarf_version: ${{ needs.get-buildharness-software-versions.outputs.zarf_version }}
        region: us-gov-west-1
        send-status: false
        make-target: "test-release-complete-secure"
        role-to-assume: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}

  # Send slack message if the e2e-govcloud-secure test fails
  send-slack-message:
    needs: e2e-govcloud-secure
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    runs-on: ubuntu-latest
    steps:
      - name: Build slack message string
        run: |
          echo "GITHUB_ACTION_RUN_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: "Send slack message"
        id: slack
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          payload: |
            {
                "blocks": [
                    {
                        "type": "header",
                        "text": {
                            "type": "plain_text",
                            "text": ":boom::poop::fan: Scheduled-e2e-secure-test Pipeline failed :fan::poop::boom:",
                            "emoji": true
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "See the pipeline run *<${{ env.GITHUB_ACTION_RUN_URL }}|here>*"
                        }
                    }
                ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
