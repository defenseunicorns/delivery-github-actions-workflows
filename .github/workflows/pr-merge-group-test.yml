name: pr-merge-group-test

on:
  workflow_call:
    secrets:
      TOKEN:
        description: "GitHub App Token"
        required: false
      APPLICATION_ID:
        description: "The GitHub App ID"
        required: false
      APPLICATION_PRIVATE_KEY:
        description: "The GitHub App Private Key"
        required: false
      AWS_COMMERCIAL_ROLE_TO_ASSUME:
        description: "AWS IAM Role to assume"
        required: true
      AWS_GOVCLOUD_ROLE_TO_ASSUME:
        description: "AWS Govcloud IAM Role to assume"
        required: true

    inputs:
      common-ci-e2e-test-matrix:
        description: >
          make target and region to run e2e tests on, must be json formatted
          If not provided, upstream workflow will run all make targets in the caller repo's Makefile that start with 'test-ci-'
          These tests are ran when:
            - In the merge queue when merging into main
            - In the merge queue when merging into a release-please branch that would cut a release of the repo

          example input:
            [
              {
                "make-target": "test-ci-complete-common",
                "region": "us-east-2"
              }
            ]
        type: string
        required: false
      release-e2e-test-matrix:
        description: >
          make target and region to run e2e tests on, must be json formatted
          If not provided, upstream workflow will run all make targets in the caller repo's Makefile that start with 'test-release-' and 'test-ci-'
          These tests are ran when:
            - In the merge queue when merging into a release-please branch that would cut a release of the repo

          example input:
            [
              {
                "make-target": "test-ci-complete-common",
                "region": "us-east-2"
              },
              {
                "make-target": "test-release-complete-common",
                "region": "us-gov-west-1"
              },
              {
                "make-target": "test-release-complete-whatever",
                "region": "us-gov-east-1"
              }
            ]
        type: string
        required: false
      e2e-required-status-check:
        description: "status check to report when e2e tests are complete"
        type: string
        required: false
        default: '["e2e-tests"]'


jobs:
  # on pull_request, report success for required status checks. this allows the testing to only run inside the merge queue.
  # "status-checks" is a json array of status checks to report the status for.
  # valid values for "status" are success, failure, error, pending
  report-success-status:
    if: github.event_name == 'pull_request'
    uses: defenseunicorns/delivery-github-actions-workflows/.github/workflows/report-status.yml@main
    secrets:
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      APPLICATION_PRIVATE_KEY: ${{ secrets.APPLICATION_PRIVATE_KEY }}
      TOKEN: ${{ secrets.TOKEN }}
    with:
      status-checks: ${{ inputs.e2e-required-status-check }}
      description: "automated report success in pull request"
      status: "success"

  # check for relevant changes that would require running the tests in the merge queue
  get-changes:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    outputs:
      relevant-changes: ${{ steps.get_changes.outputs.relevant }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      # check if there are any relevant changes to run the tests on
      # because we're watching .release-please-manifest.json, tests will always run when using release please
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: get_changes
        with:
          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}
          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
          filters: |
            relevant:
              - '**/*.tf*'
              - test/**
              - .env
              - .release-please-manifest.json
              - go.mod
              - go.sum
              - Makefile

  # Get source PR branch name from merge-group's generated branch name
  get-branch-name:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    outputs:
      branch-name: ${{ steps.get_branch_name.outputs.pr_branch_name }}
    steps:
      - name: Get token
        id: get_installation_token
        uses: peter-murray/workflow-application-token-action@d17e3a9a36850ea89f35db16c1067dd2b68ee343 # v4
        if: ${{ !env.TOKEN }}
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
        env:
          TOKEN: ${{ secrets.TOKEN }}
      - name: Get branch name
        id: get_branch_name
        run: |
          PR_NUMBER=$(echo $GITHUB_REF_NAME | grep -o 'pr-[0-9]*' | sed 's/pr-//')
          PR_URL="https://github.com/${GITHUB_REPOSITORY}/pull/${PR_NUMBER}"
          echo "pr_branch_name=$(gh pr view $PR_URL --json headRefName  | jq -r .headRefName)" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.TOKEN || steps.get_installation_token.outputs.token }}

  # automatically report success if there are no relevant changes to run the tests on in the merge queue and it's not a release-please branch targeting main
  auto-e2e-test-report-success:
    needs:
      - get-changes
      - get-branch-name
    if: |
        github.event_name == 'merge_group' &&
        needs.get-changes.outputs.relevant-changes == 'false' &&
        needs.get-branch-name.outputs.branch-name != 'release-please--branches--main'
    uses: defenseunicorns/delivery-github-actions-workflows/.github/workflows/report-status.yml@main
    secrets:
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      APPLICATION_PRIVATE_KEY: ${{ secrets.APPLICATION_PRIVATE_KEY }}
      TOKEN: ${{ secrets.TOKEN }}
    with:
      status-checks: ${{ inputs.e2e-required-status-check }}
      description: "no relevant changes, auto report success"
      status: "success"

  # this e2e test will be ran when
  # 1. it's a merge group event
  # 2. there are matching relevant file changes
  # 3. it is not a release-please branch targeting main
  common-e2e-test:
    needs:
      - get-changes
      - get-branch-name
    if: |
        github.event_name == 'merge_group' &&
        needs.get-changes.outputs.relevant-changes == 'true' &&
        needs.get-branch-name.outputs.branch-name != 'release-please--branches--main'
    uses: defenseunicorns/delivery-github-actions-workflows/.github/workflows/e2e-test.yml@main
    secrets:
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      APPLICATION_PRIVATE_KEY: ${{ secrets.APPLICATION_PRIVATE_KEY }}
      TOKEN: ${{ secrets.TOKEN }}
      AWS_COMMERCIAL_ROLE_TO_ASSUME: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
      AWS_GOVCLOUD_ROLE_TO_ASSUME: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
    with:
      e2e-test-matrix: ${{ inputs.common-ci-e2e-test-matrix || null }} # null will run all 'test-ci-' make targets
      e2e-required-status-check: ${{ inputs.e2e-required-status-check }}
      release-branch: false

  # this release e2e test will be ran when
  # 1. it's a merge group event
  # 2. there are matching relevant file changes
  # 3. it is a release-please branch targeting main
  release-e2e-test:
    needs:
      - get-changes
      - get-branch-name
    if: |
        github.event_name == 'merge_group' &&
        needs.get-changes.outputs.relevant-changes == 'true' &&
        needs.get-branch-name.outputs.branch-name == 'release-please--branches--main'
    uses: defenseunicorns/delivery-github-actions-workflows/.github/workflows/e2e-test.yml@main
    secrets:
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      APPLICATION_PRIVATE_KEY: ${{ secrets.APPLICATION_PRIVATE_KEY }}
      TOKEN: ${{ secrets.TOKEN }}
      AWS_COMMERCIAL_ROLE_TO_ASSUME: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
      AWS_GOVCLOUD_ROLE_TO_ASSUME: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
    with:
      e2e-test-matrix: ${{ inputs.release-e2e-test-matrix || null }} # null will run all 'test-ci-' and 'test-release-' make targets
      e2e-required-status-check: ${{ inputs.e2e-required-status-check }}
      release-branch: true
